{"version":3,"sources":["Components/LeftBar/LeftBar.jsx","Components/PixelContainer/PerPixel.jsx","Components/PixelContainer/Row.jsx","Components/PixelContainer/PixelContainer.jsx","Components/Main/Main.jsx","index.js"],"names":["LeftBar","className","PerPixel","props","backgroundColor","color","useState","pixelColor","setPixelColor","oldColor","setOldColor","canChangeColor","setCanChangeColor","isPixelChanged","setIsPixelChanged","pixelStyle","border","showGrid","gridColor","borderWidth","cursor","width","grid","height","display","leftClickApplyColor","rightClickApplyColor","applyColor","event","type","preventDefault","style","x","onClick","onMouseEnter","onMouseLeave","onContextMenu","onMouseDown","setMouseDown","onMouseOver","e","console","log","mouseDown","buttons","onMouseUp","Row","row","push","divWidth","divHeight","y","PixelContainer","App","setGrid","setWidth","setHeight","setDivWith","setDivHeight","setBackgroundColor","setColor","useEffect","$","css","min","max","step","id","defaultValue","onChange","target","value","hex","ReactDOM","render","Main","document","getElementById"],"mappings":"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","file":"static/js/main.7a3cbb55.chunk.js","sourcesContent":["\r\n\r\nconst LeftBar = () => {\r\nreturn(\r\n    <div className={\"leftbar-container\"}>\r\n        <div>\r\n\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default LeftBar","import { useState } from \"react\"\r\n\r\nconst PerPixel = (props) => {\r\n\r\n  let backgroundColor = props.backgroundColor\r\n  let color = props.color\r\n\r\n  const [pixelColor, setPixelColor] = useState(color)\r\n  const [oldColor, setOldColor] = useState(pixelColor);\r\n  const [canChangeColor, setCanChangeColor] = useState(true)\r\n  const [isPixelChanged, setIsPixelChanged] = useState(false)\r\n\r\n  const pixelStyle = {\r\n    backgroundColor: isPixelChanged === true ? pixelColor : backgroundColor,\r\n    border: props.showGrid === true ? `1px solid ${props.gridColor}` : \"none\",\r\n    borderWidth: props.showGrid === true ? \"0 1px 1px 0\" : \"none\",\r\n    cursor: \"pointer\",\r\n    width: props.grid,\r\n    height: props.grid,\r\n    display: \"block\",\r\n    cursor: \"cell\",\r\n    boxSizing: \"inherit\"\r\n  }\r\n\r\n  const leftClickApplyColor = () => {\r\n    setPixelColor(color)\r\n    setCanChangeColor(false)\r\n    setIsPixelChanged(true)\r\n  }\r\n\r\n  const rightClickApplyColor = () => {\r\n    setPixelColor(backgroundColor)\r\n    setIsPixelChanged(false)\r\n    setCanChangeColor(false)\r\n  }\r\n\r\n  const applyColor = (event) => {\r\n    if (event.type === \"click\") {\r\n      leftClickApplyColor()\r\n    }\r\n    if (event.type === \"contextmenu\") {\r\n      event.preventDefault()\r\n      rightClickApplyColor()\r\n    }\r\n  }\r\n\r\n  const changeColorOnHover = () => {\r\n    setOldColor(isPixelChanged === true ? pixelColor : color)\r\n    setPixelColor(color)\r\n  }\r\n\r\n  const resetColor = () => {\r\n    if (canChangeColor) {\r\n      setPixelColor(oldColor)\r\n    }\r\n\r\n    setCanChangeColor(true)\r\n  }\r\n\r\n  const onMouseDown = () => {\r\n    props.setMouseDown(true)\r\n    leftClickApplyColor()\r\n  }\r\n\r\n  const onMouseUp = () => {\r\n    props.setMouseDown(false)\r\n    leftClickApplyColor()\r\n  }\r\n\r\n  const drawLine = (e) => {\r\n    console.log(e)\r\n    if(props.mouseDown === true && e.buttons === 1) {\r\n      leftClickApplyColor()\r\n    } else if(props.mouseDown === true && e.buttons === 2) {\r\n      rightClickApplyColor()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <a\r\n      style={pixelStyle}\r\n      className={`column-${props.x + 1} column`}\r\n      onClick={applyColor}\r\n      onMouseEnter={changeColorOnHover}\r\n      onMouseLeave={resetColor}\r\n      onContextMenu={applyColor}\r\n      onMouseDown={onMouseDown}\r\n      onMouseOver={drawLine}\r\n      onMouseUp={onMouseUp}>\r\n    </a>\r\n  )\r\n}\r\n\r\nexport default PerPixel","import PerPixel from \"./PerPixel\"\r\n\r\nconst Row = (props) => {\r\n\r\n    let row = []\r\n    let grid = props.grid\r\n    let backgroundColor = props.backgroundColor\r\n    let color = props.color\r\n\r\n    for (let x = 0; x < props.width; x++) {\r\n        row.push(\r\n            <PerPixel\r\n                gridColor={props.gridColor}\r\n                mouseDown={props.mouseDown}\r\n                setMouseDown={props.setMouseDown} \r\n                showGrid={props.showGrid}\r\n                key={x}\r\n                divWidth={props.divWidth}\r\n                divHeight={props.divHeight}\r\n                grid={props.grid} \r\n                x={x}\r\n                y={props.y}\r\n                width={props.width}\r\n                height={props.height}\r\n                backgroundColor={backgroundColor}\r\n                color={color} \r\n            />)\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: grid, height: grid }} className={`row-${props.y + 1} per-row`}> {row} </div>\r\n    )\r\n}\r\n\r\nexport default Row","import Row from \"./Row\"\r\n\r\nconst PixelContainer = (props) => {\r\n\r\n    let width = props.width\r\n    let height = props.height\r\n    let backgroundColor = props.backgroundColor\r\n    let color = props.color\r\n    let row = []\r\n\r\n    for (let y = 0; y < height; y++) {\r\n        row.push(\r\n        <Row \r\n            gridColor={props.gridColor}\r\n            showGrid={props.showGrid}\r\n            key={y}\r\n            grid={props.grid} \r\n            width={width} \r\n            divWidth={props.divWidth}\r\n            divHeight={props.divHeight} \r\n            height={height} \r\n            y={y} \r\n            backgroundColor={backgroundColor} \r\n            color={color}\r\n            mouseDown={props.mouseDown}\r\n            setMouseDown={props.setMouseDown} \r\n        />)\r\n    }\r\n\r\n    return (\r\n        <div className={\"pixel-container\"} style={{ width: props.divWidth, height: props.divHeight }}>\r\n            {row}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PixelContainer","import LeftBar from \"../LeftBar/LeftBar\"\nimport PixelContainer from \"../PixelContainer/PixelContainer\";\nimport { useState, useEffect } from \"react\";\nimport { SketchPicker } from 'react-color';\nimport \"./main.css\"\nimport $ from \"jquery\"\n\nconst App = () => {\n  const [grid, setGrid] = useState(10)\n  const [showGrid, setShowGrid] = useState(true)\n  const [width, setWidth] = useState(30)\n  const [height, setHeight] = useState(30)\n  const [divWidth, setDivWith] = useState(width * grid)\n  const [divHeight, setDivHeight] = useState(height * grid)\n  const [backgroundColor, setBackgroundColor] = useState(\"black\")\n  const [color, setColor] = useState(\"white\")\n  const [gridColor, setGridColor] = useState(\"#585858\")\n\n  const [mouseDown, setMouseDown] = useState(false)\n\n  useEffect(() => {\n    $(\".column\").css(\"height\", grid).css(\"width\", grid)\n    $(\".per-row\").css(\"height\", grid).css(\"width\", grid)\n    setDivHeight(height * grid)\n    setDivWith(width * grid)\n  }, [grid, height, width]);\n\n  return (\n    <div className=\"container\">\n      <PixelContainer\n        width={width}\n        height={height}\n        divWidth={divWidth}\n        divHeight={divHeight}\n        grid={grid}\n        gridColor={gridColor}\n        backgroundColor={backgroundColor}\n        color={color} \n        showGrid={showGrid}\n        mouseDown={mouseDown}\n        setMouseDown={setMouseDown}/>\n\n      <input type=\"range\" className=\"form-range\" min=\"10\" max=\"50\" step=\"1\" id=\"customRange3\" defaultValue={width} onChange={(e) => setWidth(e.target.value)} />\n      <input type=\"range\" className=\"form-range\" min=\"10\" max=\"50\" step=\"1\" id=\"customRange3\" defaultValue={height} onChange={(e) => setHeight(e.target.value)} />\n      <input type=\"range\" className=\"form-range\" min=\"1\" max=\"25\" step=\"1\" id=\"customRange3\" defaultValue={grid} onChange={(e) => setGrid(e.target.value)} />\n      <SketchPicker color={backgroundColor} onChange={(e) => setBackgroundColor(e.hex)} />\n      <SketchPicker color={color} onChange={(e) => setColor(e.hex)} />\n      <LeftBar />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Components/Main/Main';\n\nReactDOM.render(\n    <Main />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}