{"version":3,"sources":["Components/ConfigContainer/OpenCloseButton.jsx","Components/ConfigContainer/MainColors.jsx","Components/ConfigContainer/AddedColors.jsx","Components/ConfigContainer/Colors.jsx","Components/ConfigContainer/Input.jsx","Components/ConfigContainer/Checkbox.jsx","Components/ConfigContainer/ConfigurationInputs.jsx","Components/ConfigContainer/ConfBar.jsx","Components/PixelContainer/PerPixel.jsx","Components/PixelContainer/Row.jsx","Components/PixelContainer/PixelContainer.jsx","Components/Main/Main.jsx","index.js"],"names":["OpenCloseButton","props","className","onClick","setOpenConfiguration","openConfiguration","icon","faChevronDown","faChevronUp","style","width","height","color","position","top","MainColors","pickerList","map","picker","i","marginRight","background","name","publicShowColor","display","displayControl","disableAlpha","onChange","e","publicChangeColor","hex","AddedColors","addedColors","setColor","Colors","useState","showBGPicker","setShowBGPicker","setShowBGPickerDisplay","showColorPicker","setShowColorPicker","setShowColorPickerDisplay","showGridColorPicker","setShowGridColorPicker","setShowGridPickerDisplay","backgroundColor","showValue","gridColor","pluginName","setBackgroundColor","setGridColor","Input","setValue","value","id","confName","Checkbox","type","defaultChecked","ConfigurationInputs","setWidth","setHeight","grid","setGrid","showGrid","setShowGrid","ConfBar","bottom","PerPixel","pixelColor","setPixelColor","oldColor","setOldColor","canChangeColor","setCanChangeColor","isHovered","setIsHovered","isPixelChanged","setIsPixelChanged","pixelStyle","border","borderWidth","x","y","cursor","boxSizing","leftClickApplyColor","rightClickApplyColor","applyColor","event","preventDefault","onMouseEnter","onMouseLeave","onContextMenu","onMouseDown","setMouseDown","Set","has","length","setAddedColors","checkColorAddedBefore","onMouseOver","mouseDown","buttons","onMouseUp","Row","row","push","divWidth","divHeight","allUsedColors","setAllUsedColors","showBackgroundColor","setShowBackgroundColor","PixelContainer","App","setDivWith","setDivHeight","useEffect","$","css","ReactDOM","render","Main","document","getElementById"],"mappings":"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","file":"static/js/main.1c9bd887.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst OpenCloseButton = (props) => {\r\n    const iconStyle = {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n        color: \"white\",\r\n        position: \"relative\",\r\n        top: \"3px\",\r\n    }\r\n    \r\n    const changeConfiguration = () => {\r\n        props.setOpenConfiguration(!props.openConfiguration)\r\n    }\r\n    \r\n    return (\r\n        <div className={\"open-close-button\"}>\r\n            <div className={\"open-close-button-inside\"} onClick={changeConfiguration}>\r\n                <FontAwesomeIcon icon={props.openConfiguration === true ? faChevronDown : faChevronUp} style={iconStyle} className={props.openConfiguration === true ? \"open-configuration-button\" : \"close-configuration-button\"} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OpenCloseButton","import { ChromePicker } from 'react-color';\r\n\r\nconst MainColors = (props) => {\r\n    return(\r\n        <div className={\"colors\"}>\r\n        {props.pickerList.map((picker, i) => (\r\n            <div className=\"conf\" key={i} style={{marginRight: i === 2 ? \"\" : \"10px\"}}>\r\n                <div style={{ background: picker.color, width: picker.name === \"paletteColor\" ? \"50px\" : \"35px\", height: picker.name === \"paletteColor\" ? \"50px\" : \"35px\" }} className=\"color-picker\" onClick={() => props.publicShowColor(picker.name)}></div>\r\n                <div style={{ display: picker.displayControl, position: \"absolute\", top: i === 1 ? \"-220px\" : \"-215px\" }}>\r\n                    <ChromePicker disableAlpha={true} style={{ display: picker.displayControl }} color={picker.color} onChange={(e) => props.publicChangeColor(e.hex, picker.name)} />\r\n                </div>\r\n            </div>\r\n        ))}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default MainColors","const AddedColors = (props) => {\r\n    return (\r\n        <div className={\"added-colors\"}>\r\n            {props.addedColors.map((color, i) => (\r\n                <div key={i} className={\"color\"} style={{background: color}} onClick={() => props.setColor(color)}></div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddedColors","import { useState } from \"react\"\r\nimport MainColors from \"./MainColors\"\r\nimport AddedColors from \"./AddedColors\"\r\n\r\nconst Colors = (props) => {\r\n    const [showBGPicker, setShowBGPicker] = useState(false)\r\n    const setShowBGPickerDisplay = showBGPicker ? \"\" : \"none\"\r\n    const [showColorPicker, setShowColorPicker] = useState(false)\r\n    const setShowColorPickerDisplay = showColorPicker ? \"\" : \"none\"\r\n    const [showGridColorPicker, setShowGridColorPicker] = useState(false)\r\n    const setShowGridPickerDisplay = showGridColorPicker ? \"\" : \"none\"\r\n\r\n    const publicChangeColor = (color, pluginName) => {\r\n        if (pluginName === \"background\") {\r\n            props.setBackgroundColor(color)\r\n        } else if (pluginName === \"paletteColor\") {\r\n            props.setColor(color)\r\n        } else {\r\n            props.setGridColor(color)\r\n        }\r\n    }\r\n\r\n    const publicShowColor = pluginName => {\r\n        if (pluginName === \"background\") {\r\n            setShowBGPicker(!showBGPicker)\r\n            setShowColorPicker(false)\r\n            setShowGridColorPicker(false)\r\n        } else if (pluginName === \"paletteColor\") {\r\n            setShowColorPicker(!showColorPicker)\r\n            setShowBGPicker(false)\r\n            setShowGridColorPicker(false)\r\n        } else {\r\n            setShowGridColorPicker(!showGridColorPicker)\r\n            setShowColorPicker(false)\r\n            setShowBGPicker(false)\r\n        }\r\n    }\r\n\r\n    const pickerList = [{\r\n        name: \"background\",\r\n        background: props.backgroundColor,\r\n        showValue: showBGPicker,\r\n        displayControl: setShowBGPickerDisplay,\r\n        color: props.backgroundColor\r\n    },\r\n    {\r\n        name: \"paletteColor\",\r\n        background: props.color,\r\n        showValue: showColorPicker,\r\n        displayControl: setShowColorPickerDisplay,\r\n        color: props.color\r\n    },\r\n    {\r\n        name: \"gridColor\",\r\n        background: props.gridColor,\r\n        showValue: showGridColorPicker,\r\n        displayControl: setShowGridPickerDisplay,\r\n        color: props.gridColor\r\n    },\r\n    ]\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"color-container\">\r\n                    <MainColors pickerList={pickerList} publicShowColor={publicShowColor} publicChangeColor={publicChangeColor} />\r\n                    <AddedColors addedColors={props.addedColors} setColor={props.setColor} />\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Colors","const Input = (props) => {\r\n    return (\r\n        <div className={\"main-input-container\"}>\r\n            <div className={\"input-container\"}>\r\n                <span className={\"next\"} onClick={() => props.setValue(props.value + 1)}></span>\r\n                <span className={\"prev\"} onClick={() => props.setValue(props.value - 1)}></span>\r\n                <div id={\"box\"}>\r\n                    <span>{props.value}</span>\r\n                </div>\r\n            </div>\r\n            {props.confName}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","const Checkbox = (props) => {\r\n    return (\r\n        <div className={\"checkbox-container\"}>\r\n            <input type=\"checkbox\" name=\"\" defaultChecked={props.value} className={\"checkbox-config\"} onChange={() => props.setValue(!props.value)}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkbox","import Input from \"./Input\"\r\nimport Checkbox from \"./Checkbox\"\r\n\r\nconst ConfigurationInputs = (props) => {\r\n    return (\r\n        <>\r\n            <Input value={props.width} setValue={props.setWidth} confName={\"Width\"} />\r\n            <Input value={props.height} setValue={props.setHeight} confName={\"Height\"} />\r\n            <Input value={props.grid} setValue={props.setGrid} confName={\"Grid\"} />\r\n            <Checkbox value={props.showGrid} setValue={props.setShowGrid}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ConfigurationInputs","import OpenCloseButton from \"./OpenCloseButton\"\r\nimport Colors from \"./Colors\"\r\nimport ConfigurationInputs from \"./ConfigurationInputs\"\r\n\r\nconst ConfBar = (props) => {\r\n\r\n    return (\r\n        <div className={props.openConfiguration === true ? \"conf-container open-configuration-container\" : \"conf-container close-configuration-container\"} style={{ bottom: props.openConfiguration === true ? \"0px\" : \"-99px\" }}>\r\n            <OpenCloseButton openConfiguration={props.openConfiguration} setOpenConfiguration={props.setOpenConfiguration} />\r\n            <div className={\"conf-area\"} style={{ display: \"flex\" }}>\r\n                <ConfigurationInputs \r\n                    width={props.width} \r\n                    setWidth={props.setWidth} \r\n                    height={props.height}\r\n                    setHeight={props.setHeight}\r\n                    grid={props.grid}\r\n                    setGrid={props.setGrid}\r\n                    showGrid={props.showGrid}\r\n                    setShowGrid={props.setShowGrid}/>\r\n            </div>\r\n            <div className={\"conf-area\"}>\r\n                <Colors\r\n                    setBackgroundColor={props.setBackgroundColor}\r\n                    setColor={props.setColor}\r\n                    setGridColor={props.setGridColor}\r\n                    backgroundColor={props.backgroundColor}\r\n                    color={props.color}\r\n                    gridColor={props.gridColor}\r\n                    addedColors={props.addedColors} />\r\n            </div>\r\n            <div className={\"conf-area\"}>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfBar","import { useState } from \"react\"\r\n\r\nconst PerPixel = (props) => {\r\n\r\n  let backgroundColor = props.backgroundColor\r\n  let color = props.color\r\n\r\n  const [pixelColor, setPixelColor] = useState(color)\r\n  const [oldColor, setOldColor] = useState(pixelColor);\r\n  const [canChangeColor, setCanChangeColor] = useState(true)\r\n  const [isHovered, setIsHovered] = useState(false)\r\n  const [isPixelChanged, setIsPixelChanged] = useState(false)\r\n\r\n  const pixelStyle = {\r\n    backgroundColor:  isPixelChanged === true ? pixelColor : isHovered === true ? pixelColor : backgroundColor,\r\n    border: props.showGrid === true ? `1px solid ${props.gridColor}` : \"none\",\r\n    borderWidth: props.showGrid === true ? props.x === 0 && props.y === 0 ? \"1px 1px 1px\" : props.x === 0 ? \"0 1px 1px 1px\" : props.y === 0 ? \"1px 1px 1px 0px\" : \"0px 1px 1px 0px\" : \"none\",\r\n    width: props.grid,\r\n    height: props.grid,\r\n    display: \"block\",\r\n    cursor: \"cell\",\r\n    boxSizing: \"inherit\"\r\n  }\r\n\r\n  const checkColorAddedBefore = (color) => {\r\n    const newColorList = new Set(props.addedColors);\r\n\r\n    if (newColorList.has(color) !== true && props.addedColors.length < 7) {\r\n      props.setAddedColors([...props.addedColors, color])\r\n    }\r\n  }\r\n\r\n  const leftClickApplyColor = () => {\r\n    setPixelColor(color)\r\n    setCanChangeColor(false)\r\n    setIsPixelChanged(true)\r\n  }\r\n\r\n  const rightClickApplyColor = () => {\r\n    setPixelColor(backgroundColor)\r\n    setIsPixelChanged(false)\r\n    setCanChangeColor(false)\r\n  }\r\n\r\n  const applyColor = (event) => {\r\n    if (event.type === \"click\") {\r\n      leftClickApplyColor()\r\n    }\r\n    if (event.type === \"contextmenu\") {\r\n      event.preventDefault()\r\n      rightClickApplyColor()\r\n    }\r\n  }\r\n\r\n  const changeColorOnHover = () => {\r\n    setOldColor(isPixelChanged === true ? pixelColor : color)\r\n    setPixelColor(color)\r\n    setCanChangeColor(true)\r\n    setIsHovered(true)\r\n  }\r\n\r\n  const resetColor = () => {\r\n    if (canChangeColor) {\r\n      setPixelColor(oldColor)\r\n    }\r\n\r\n    setCanChangeColor(true)\r\n    setIsHovered(false)\r\n  }\r\n\r\n  const onMouseDown = () => {\r\n    props.setMouseDown(true)\r\n    leftClickApplyColor()\r\n    checkColorAddedBefore(color)\r\n  }\r\n\r\n  const onMouseUp = () => {\r\n    props.setMouseDown(false)\r\n    leftClickApplyColor()\r\n  }\r\n\r\n  const drawLine = (e) => {\r\n    if (props.mouseDown === true && e.buttons === 1) {\r\n      leftClickApplyColor()\r\n    } else if (props.mouseDown === true && e.buttons === 2) {\r\n      rightClickApplyColor()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={pixelStyle}\r\n      className={`column-${props.x + 1} column`}\r\n      onClick={applyColor}\r\n      onMouseEnter={changeColorOnHover}\r\n      onMouseLeave={resetColor}\r\n      onContextMenu={applyColor}\r\n      onMouseDown={onMouseDown}\r\n      onMouseOver={drawLine}\r\n      onMouseUp={onMouseUp}>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PerPixel","import PerPixel from \"./PerPixel\"\r\n\r\nconst Row = (props) => {\r\n\r\n    let row = []\r\n    let grid = props.grid\r\n    let backgroundColor = props.backgroundColor\r\n    let color = props.color\r\n\r\n    for (let x = 0; x < props.width; x++) {\r\n        row.push(\r\n            <PerPixel\r\n                gridColor={props.gridColor}\r\n                mouseDown={props.mouseDown}\r\n                setMouseDown={props.setMouseDown} \r\n                showGrid={props.showGrid}\r\n                key={x}\r\n                divWidth={props.divWidth}\r\n                divHeight={props.divHeight}\r\n                grid={props.grid} \r\n                x={x}\r\n                y={props.y}\r\n                width={props.width}\r\n                height={props.height}\r\n                backgroundColor={backgroundColor}\r\n                color={color} \r\n                addedColors={props.addedColors}\r\n                setAddedColors={props.setAddedColors} \r\n                allUsedColors={props.allUsedColors}\r\n                setAllUsedColors={props.setAllUsedColors}\r\n                showBackgroundColor={props.showBackgroundColor}\r\n                setShowBackgroundColor={props.setShowBackgroundColor} \r\n            />)\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: grid, height: grid }} className={`row-${props.y + 1} per-row`}> {row} </div>\r\n    )\r\n}\r\n\r\nexport default Row","import Row from \"./Row\"\r\n\r\nconst PixelContainer = (props) => {\r\n\r\n    let width = props.width\r\n    let height = props.height\r\n    let backgroundColor = props.backgroundColor\r\n    let color = props.color\r\n    let row = []\r\n\r\n    for (let y = 0; y < height; y++) {\r\n        row.push(\r\n        <Row \r\n            gridColor={props.gridColor}\r\n            showGrid={props.showGrid}\r\n            key={y}\r\n            grid={props.grid} \r\n            width={width} \r\n            divWidth={props.divWidth}\r\n            divHeight={props.divHeight} \r\n            height={height} \r\n            y={y} \r\n            backgroundColor={backgroundColor} \r\n            color={color}\r\n            mouseDown={props.mouseDown}\r\n            setMouseDown={props.setMouseDown}\r\n            addedColors={props.addedColors}\r\n            setAddedColors={props.setAddedColors}\r\n            allUsedColors={props.allUsedColors}\r\n            setAllUsedColors={props.setAllUsedColors}\r\n            showBackgroundColor={props.showBackgroundColor}\r\n            setShowBackgroundColor={props.setShowBackgroundColor} \r\n        />)\r\n    }\r\n\r\n    return (\r\n        <div className={\"pixel-container\"} style={{ width: props.divWidth, height: props.divHeight, borderWidth: \"1px 0 0 0\" }}>\r\n            {row}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PixelContainer","import ConfBar from \"../ConfigContainer/ConfBar\"\r\nimport PixelContainer from \"../PixelContainer/PixelContainer\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./main.css\"\r\nimport $ from \"jquery\"\r\n\r\nconst App = () => {\r\n  const [grid, setGrid] = useState(40)\r\n  const [showGrid, setShowGrid] = useState(true)\r\n  const [width, setWidth] = useState(16)\r\n  const [height, setHeight] = useState(16)\r\n  const [divWidth, setDivWith] = useState(width * grid)\r\n  const [divHeight, setDivHeight] = useState(height * grid)\r\n  const [backgroundColor, setBackgroundColor] = useState(\"black\")\r\n  const [color, setColor] = useState(\"#ffff\")\r\n  const [gridColor, setGridColor] = useState(\"#585858\")\r\n  const [openConfiguration, setOpenConfiguration] = useState(true)\r\n  const [addedColors, setAddedColors] = useState([])\r\n  const [allUsedColors, setAllUsedColors] = useState([])\r\n  const [showBackgroundColor, setShowBackgroundColor] = useState(false)\r\n\r\n  const [mouseDown, setMouseDown] = useState(false)\r\n\r\n  useEffect(() => {\r\n    $(\".column\").css(\"height\", grid).css(\"width\", grid)\r\n    $(\".per-row\").css(\"height\", grid).css(\"width\", grid)\r\n    setDivHeight(height * grid)\r\n    setDivWith(width * grid)\r\n  }, [grid, height, width]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <PixelContainer\r\n        width={width}\r\n        height={height}\r\n        divWidth={divWidth}\r\n        divHeight={divHeight}\r\n        grid={grid}\r\n        gridColor={gridColor}\r\n        backgroundColor={backgroundColor}\r\n        color={color} \r\n        showGrid={showGrid}\r\n        mouseDown={mouseDown}\r\n        setMouseDown={setMouseDown}\r\n        addedColors={addedColors}\r\n        setAddedColors={setAddedColors}\r\n        allUsedColors={allUsedColors}\r\n        setAllUsedColors={setAllUsedColors}\r\n        showBackgroundColor={showBackgroundColor}\r\n        setShowBackgroundColor={setShowBackgroundColor}/>\r\n      <ConfBar \r\n        addedColors={addedColors}\r\n        backgroundColor={backgroundColor}\r\n        setBackgroundColor={setBackgroundColor}\r\n        color={color}\r\n        setColor={setColor}\r\n        gridColor={gridColor}\r\n        setGridColor={setGridColor}\r\n        showGrid={showGrid}\r\n        setShowGrid={setShowGrid}\r\n        openConfiguration={openConfiguration}\r\n        setOpenConfiguration={setOpenConfiguration}\r\n        width={width}\r\n        setWidth={setWidth}\r\n        height={height}\r\n        setHeight={setHeight}\r\n        grid={grid}\r\n        setGrid={setGrid}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Main from './Components/Main/Main';\r\n\r\nReactDOM.render(\r\n    <Main />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}